{"version":3,"sources":["../src/module.ts"],"names":["_","kbn","loadPluginCss","MetricsPanelCtrl","Card","rendering","statusHeatmapOptionsEditor","ColorModeDiscrete","CANVAS","SVG","VALUE_INDEX","TIME_INDEX","renderer","colorSchemes","name","value","invert","colorModes","opacityScales","dark","light","StatusHeatmapCtrl","$scope","$injector","annotationsSrv","datasource","color","mode","cardColor","colorScale","exponent","colorScheme","defaultColor","thresholds","cards","cardMinWidth","cardVSpacing","cardHSpacing","cardRound","xAxis","show","showWeekends","minBucketWidthToShowWeekends","showCrosshair","labelFormat","yAxis","tooltip","legend","data","unitFormat","decimals","nullPointMode","yAxisSort","highlightCards","useMax","defaultsDeep","panel","panelDefaults","graph","multipleValues","noColorDefined","discreteHelper","dataWarnings","title","tip","annotations","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","postRefresh","onRenderComplete","chartWidth","renderingCompleted","wndWidth","$","window","width","panelWidthFactor","gridPos","w","panelWidth","Math","ceil","max","getChartWidth","minCardWidth","minSpacing","maxCardsCount","intervalMs","rangeMs","range","to","valueOf","from","roundIntervalCeil","lowLimitMs","intervalOverride","interval","templateSrv","replace","scopedVars","slice","interval_to_ms","secondsToHms","annotationsPromise","getAnnotations","dashboard","datasourcePromises","then","r","issueQueriesWithInterval","origInterval","res","dataList","cardsData","convertToCards","console","log","result","loading","length","render","addEditorTab","unitFormats","getUnitFormats","updateCardsValuesHasColorInfo","newColor","push","index","splice","scope","elem","attrs","ctrl","xBucketSize","yBucketSize","maxValue","minValue","targets","targetIndex","map","d","i","target","concat","toArray","keys","datapoints","j","card","id","values","y","x","si","s","datapoint","min"],"mappings":"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","sourcesContent":["// Libraries\nimport _ from 'lodash';\nimport { auto } from 'angular';\n\n// Components\nimport './color_legend';\n\n// Utils\nimport kbn from 'app/core/utils/kbn';\nimport {loadPluginCss} from 'app/plugins/sdk';\n\n// Types\nimport { MetricsPanelCtrl } from 'app/plugins/sdk';\nimport { AnnotationsSrv } from 'app/features/annotations/annotations_srv';\nimport {CardsStorage, Card} from './statusmap_data';\nimport rendering from './rendering';\n// import aggregates, { aggregatesMap } from './aggregates';\n// import fragments, { fragmentsMap } from './fragments';\n// import { labelFormats } from './xAxisLabelFormats';\nimport {statusHeatmapOptionsEditor} from './options_editor';\nimport {ColorModeDiscrete} from \"./color_mode_discrete\";\n\nconst CANVAS = 'CANVAS';\nconst SVG = 'SVG';\nconst VALUE_INDEX = 0,\n      TIME_INDEX = 1;\n\nconst renderer = CANVAS;\n\nconst colorSchemes = [\n  // Diverging\n  { name: 'Spectral', value: 'interpolateSpectral', invert: 'always' },\n  { name: 'RdYlGn', value: 'interpolateRdYlGn', invert: 'always' },\n  { name: 'GnYlRd', value: 'interpolateGnYlRd', invert: 'always' },\n\n  // Sequential (Single Hue)\n  { name: 'Blues', value: 'interpolateBlues', invert: 'dark' },\n  { name: 'Greens', value: 'interpolateGreens', invert: 'dark' },\n  { name: 'Greys', value: 'interpolateGreys', invert: 'dark' },\n  { name: 'Oranges', value: 'interpolateOranges', invert: 'dark' },\n  { name: 'Purples', value: 'interpolatePurples', invert: 'dark' },\n  { name: 'Reds', value: 'interpolateReds', invert: 'dark' },\n\n  // Sequential (Multi-Hue)\n  { name: 'BuGn', value: 'interpolateBuGn', invert: 'dark' },\n  { name: 'BuPu', value: 'interpolateBuPu', invert: 'dark' },\n  { name: 'GnBu', value: 'interpolateGnBu', invert: 'dark' },\n  { name: 'OrRd', value: 'interpolateOrRd', invert: 'dark' },\n  { name: 'PuBuGn', value: 'interpolatePuBuGn', invert: 'dark' },\n  { name: 'PuBu', value: 'interpolatePuBu', invert: 'dark' },\n  { name: 'PuRd', value: 'interpolatePuRd', invert: 'dark' },\n  { name: 'RdPu', value: 'interpolateRdPu', invert: 'dark' },\n  { name: 'YlGnBu', value: 'interpolateYlGnBu', invert: 'dark' },\n  { name: 'YlGn', value: 'interpolateYlGn', invert: 'dark' },\n  { name: 'YlOrBr', value: 'interpolateYlOrBr', invert: 'dark' },\n  { name: 'YlOrRd', value: 'interpolateYlOrRd', invert: 'dark' }\n];\n\nlet colorModes = ['opacity', 'spectrum', 'discrete'];\nlet opacityScales = ['linear', 'sqrt'];\n\ninterface DataWarning {\n  title: string;\n  tip: string;\n}\n\ninterface DataWarnings {\n  noColorDefined: DataWarning;\n  multipleValues: DataWarning;\n}\n\ninterface ColorThreshold {\n\n}\n\n\n\n\nloadPluginCss({\n  dark: 'plugins/flant-statusmap-panel/css/statusmap.dark.css',\n  light: 'plugins/flant-statusmap-panel/css/statusmap.light.css'\n});\n\nclass StatusHeatmapCtrl extends MetricsPanelCtrl {\n  static templateUrl = 'module.html';\n\n  opacityScales: any = [];\n  colorModes: any = [];\n  colorSchemes: any = [];\n  unitFormats: any;\n  data: any;\n  cardsData: any;\n  graph: any;\n  multipleValues: boolean;\n  noColorDefined: boolean;\n  discreteHelper: ColorModeDiscrete;\n  dataWarnings: DataWarnings;\n\n  annotations: object[] = [];\n  annotationsPromise: any;\n\n  panelDefaults: any = {\n    // datasource name, null = default datasource\n    datasource: null,\n    // color mode\n    color: {\n      mode: 'spectrum',\n      cardColor: '#b4ff00',\n      colorScale: 'sqrt',\n      exponent: 0.5,\n      colorScheme: 'interpolateGnYlRd',\n      // discrete mode settings\n      defaultColor: '#757575',\n      thresholds: [] // manual colors\n    },\n    // buckets settings\n    cards: {\n      cardMinWidth: 5,\n      cardVSpacing: 2,\n      cardHSpacing: 2,\n      cardRound: null\n    },\n    xAxis: {\n      show: true,\n      showWeekends: true,\n      minBucketWidthToShowWeekends: 4,\n      showCrosshair: true,\n      labelFormat: '%a %m/%d'\n    },\n    yAxis: {\n      show: true,\n      showCrosshair: false\n    },\n    tooltip: {\n      show: true\n    },\n    legend: {\n      show: true\n    },\n    data: {\n      unitFormat: 'short',\n      decimals: null\n    },\n    // how null points should be handled\n    nullPointMode: 'as empty',\n    yAxisSort: 'metrics',\n    highlightCards: true,\n    useMax: true\n  };\n\n  /** @ngInject */\n  constructor($scope: any, $injector: auto.IInjectorService, private annotationsSrv: AnnotationsSrv) {\n    super($scope, $injector);\n\n    _.defaultsDeep(this.panel, this.panelDefaults);\n\n    this.opacityScales = opacityScales;\n    this.colorModes = colorModes;\n    this.colorSchemes = colorSchemes;\n\n    // default graph width for discrete card width calculation\n    this.graph = {\n      \"chartWidth\" : -1\n    };\n\n    this.multipleValues = false;\n    this.noColorDefined = false;\n\n    this.discreteHelper = new ColorModeDiscrete($scope);\n\n    this.dataWarnings = {\n      \"noColorDefined\": {\n        title: 'Data has value with undefined color',\n        tip: 'Check metric values, color values or define a new color',\n      },\n      \"multipleValues\": {\n        title: 'Data has multiple values for one target',\n        tip: 'Change targets definitions or set \"use max value\"',\n      }\n    };\n\n    this.annotations = [];\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('refresh', this.postRefresh.bind(this));\n    // custom event from rendering.js\n    this.events.on('render-complete', this.onRenderComplete.bind(this));\n  }\n\n  onRenderComplete(data):void {\n    this.graph.chartWidth = data.chartWidth;\n    this.renderingCompleted();\n  }\n\n  getChartWidth():number {\n    const wndWidth = $(window).width();\n    // gripPos.w is a width in grid's measurements. Grid size in Grafana is 24.\n    const panelWidthFactor = this.panel.gridPos.w / 24;\n    const panelWidth = Math.ceil(wndWidth * panelWidthFactor);\n    // approximate chartWidth because y axis ticks not rendered yet on first data receive.\n    const chartWidth = _.max([\n      panelWidth - 200,\n      panelWidth/2\n    ]);\n\n    return chartWidth!;\n  }\n\n  // override calculateInterval for discrete color mode\n  calculateInterval() {\n    let chartWidth = this.getChartWidth();\n\n    let minCardWidth = this.panel.cards.cardMinWidth;\n    let minSpacing = this.panel.cards.cardHSpacing;\n    let maxCardsCount = Math.ceil((chartWidth-minCardWidth) / (minCardWidth + minSpacing));\n\n    let intervalMs;\n    let rangeMs = this.range.to.valueOf() - this.range.from.valueOf();\n\n    // this is minimal interval! kbn.round_interval will lower it.\n    intervalMs = this.discreteHelper.roundIntervalCeil(rangeMs / maxCardsCount);\n\n    // Calculate low limit of interval\n    let lowLimitMs = 1; // 1 millisecond default low limit\n    \n    let intervalOverride = this.panel.interval;\n\n    // if no panel interval check datasource\n    if (intervalOverride) {\n      intervalOverride = this.templateSrv.replace(intervalOverride, this.panel.scopedVars);\n    } else if (this.datasource && this.datasource.interval) {\n      intervalOverride = this.datasource.interval;\n    }\n\n    if (intervalOverride) {\n      if (intervalOverride[0] === '>') {\n        intervalOverride = intervalOverride.slice(1);\n      }\n      lowLimitMs = kbn.interval_to_ms(intervalOverride);\n    }\n\n    if (lowLimitMs > intervalMs) {\n      intervalMs = lowLimitMs;\n    }\n    let interval = kbn.secondsToHms(intervalMs / 1000);\n\n    this.intervalMs = intervalMs;\n    this.interval = interval;\n  }\n\n  issueQueries(datasource: any) {\n    this.annotationsPromise = this.annotationsSrv.getAnnotations({\n      dashboard: this.dashboard,\n      panel: this.panel,\n      range: this.range,\n    });\n\n    /* Wait for annotationSrv requests to get datasources to\n     * resolve before issuing queries. This allows the annotations\n     * service to fire annotations queries before graph queries\n     * (but not wait for completion). This resolves\n     * issue 11806.\n     */\n    // 5.x before 5.4 doesn't have datasourcePromises. \n\n    if (\"undefined\" !== typeof(this.annotationsSrv.datasourcePromises)) {\n      return this.annotationsSrv.datasourcePromises.then(r => {\n        return this.issueQueriesWithInterval(datasource, this.interval);\n      });\n    } else {\n      return this.issueQueriesWithInterval(datasource, this.interval);\n    }\n  }\n\n  // Grafana 6.2 (and older) is using this.interval for queries,\n  // but Grafana 6.3+ is calculating interval again in queryRunner,\n  // so we need to save-restore this.panel.interval.\n  issueQueriesWithInterval(datasource: any, interval: any) {\n    var origInterval = this.panel.interval;\n    this.panel.interval = this.interval;\n    var res = super.issueQueries(datasource);\n    this.panel.interval = origInterval;\n    return res;\n  }\n\n\n  onDataReceived(dataList: any) {\n    this.data      = dataList;\n    this.cardsData = this.convertToCards(this.data);\n\n    console.log(\"OnDataReceived\");\n\n    this.annotationsPromise.then(\n      (result: { alertState: any; annotations: any }) => {\n        this.loading = false;\n        //this.alertState = result.alertState;\n        if (result.annotations && result.annotations.length > 0) {\n          this.annotations = result.annotations;\n        } else {\n          this.annotations = [];\n        }\n        console.log(\"annotationsPromise result \" + this.annotations.length + \" annotations\");\n        this.render();\n      },\n      () => {\n        this.loading = false;\n        this.annotations = [];\n        console.log(\"annotationsPromise onrejected\");\n        this.render();\n      }\n    );\n\n    //this.render();\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', statusHeatmapOptionsEditor, 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  onRender() {\n    if (!this.range || !this.data) { return; }\n\n    this.multipleValues = false;\n    if (!this.panel.useMax) {\n      if (this.cardsData) {\n        this.multipleValues = this.cardsData.multipleValues;\n      }\n    }\n\n    this.noColorDefined = false;\n    if (this.panel.color.mode === 'discrete') {\n      this.discreteHelper.updateCardsValuesHasColorInfo();\n      if (this.cardsData) {\n        this.noColorDefined = this.cardsData.noColorDefined;\n      }\n    }\n  }\n\n  onCardColorChange(newColor) {\n    this.panel.color.cardColor = newColor;\n    this.render();\n  }\n\n  onDataError() {\n    this.data = [];\n    this.annotations = [];\n    this.render();\n  }\n\n  postRefresh() {\n    this.noColorDefined = false;\n  }\n\n  onEditorAddThreshold() {\n    this.panel.color.thresholds.push({ color: this.panel.defaultColor });\n    this.render();\n  }\n\n  onEditorRemoveThreshold(index:number) {\n    this.panel.color.thresholds.splice(index, 1);\n    this.render();\n  }\n\n  onEditorRemoveThresholds() {\n    this.panel.color.thresholds = [];\n    this.render();\n  }\n\n  onEditorAddThreeLights() {\n    this.panel.color.thresholds.push({color: \"red\", value: 2, tooltip: \"error\" });\n    this.panel.color.thresholds.push({color: \"yellow\", value: 1, tooltip: \"warning\" });\n    this.panel.color.thresholds.push({color: \"green\", value: 0, tooltip: \"ok\" });\n    this.render();\n  }\n  \n  /* https://ethanschoonover.com/solarized/ */\n  onEditorAddSolarized() {\n    this.panel.color.thresholds.push({color: \"#b58900\", value: 0, tooltip: \"yellow\" });\n    this.panel.color.thresholds.push({color: \"#cb4b16\", value: 1, tooltip: \"orange\" });\n    this.panel.color.thresholds.push({color: \"#dc322f\", value: 2, tooltip: \"red\" });\n    this.panel.color.thresholds.push({color: \"#d33682\", value: 3, tooltip: \"magenta\" });\n    this.panel.color.thresholds.push({color: \"#6c71c4\", value: 4, tooltip: \"violet\" });\n    this.panel.color.thresholds.push({color: \"#268bd2\", value: 5, tooltip: \"blue\" });\n    this.panel.color.thresholds.push({color: \"#2aa198\", value: 6, tooltip: \"cyan\" });\n    this.panel.color.thresholds.push({color: \"#859900\", value: 7, tooltip: \"green\" });\n    this.render();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n\n  // group values into buckets by target\n  convertToCards(data) {\n  let cardsData = <CardsStorage> {\n      cards: [],\n      xBucketSize: 0,\n      yBucketSize: 0,\n      maxValue: 0,\n      minValue: 0,\n      multipleValues: false,\n      noColorDefined: false,\n      targets: [], // array of available unique targets\n      targetIndex: {} // indices in data array for each of available unique targets\n    };\n\n    if (!data || data.length == 0) { return cardsData;}\n\n    // Collect uniq timestamps from data and spread over targets and timestamps\n\n    // collect uniq targets and their indices\n    _.map(data, (d, i) => {\n      cardsData.targetIndex[d.target] = _.concat(_.toArray(cardsData.targetIndex[d.target]), i)\n    });\n\n    // TODO add some logic for targets heirarchy\n    cardsData.targets = _.keys(cardsData.targetIndex);\n    cardsData.yBucketSize = cardsData.targets.length;\n    // Maximum number of buckets over x axis\n    cardsData.xBucketSize = _.max(_.map(data, d => d.datapoints.length));\n\n    // Collect all values for each bucket from datapoints with similar target.\n    // TODO aggregate values into buckets over datapoint[TIME_INDEX] not over datapoint index (j).\n    for(let i = 0; i < cardsData.targets.length; i++) {\n      let target = cardsData.targets[i];\n\n      for (let j = 0; j < cardsData.xBucketSize; j++) {\n        let card = new Card();\n        card.id = i*cardsData.xBucketSize + j;\n        card.values = [];\n        card.y = target;\n        card.x = -1;\n\n        // collect values from all timeseries with target\n        for (let si = 0; si < cardsData.targetIndex[target].length; si++) {\n          let s = data[cardsData.targetIndex[target][si]];\n          if (s.datapoints.length <= j) {\n            continue;\n          }\n          let datapoint = s.datapoints[j];\n          if (card.values.length === 0) {\n            card.x = datapoint[TIME_INDEX];\n          }\n          card.values.push(datapoint[VALUE_INDEX]);\n        }\n        card.minValue = _.min(card.values);\n        card.maxValue = _.max(card.values);\n        if (card.values.length > 1) {\n          cardsData.multipleValues = true;\n          card.multipleValues = true;\n          card.value = card.maxValue; // max value by default\n        } else {\n          card.value = card.maxValue; // max value by default\n        }\n\n        if (cardsData.maxValue < card.maxValue)\n          cardsData.maxValue = card.maxValue;\n\n        if (cardsData.minValue > card.minValue)\n          cardsData.minValue = card.minValue;\n\n        if (card.x != -1) {\n        cardsData.cards.push(card);\n        }\n      }\n    }\n\n    return cardsData;\n  }\n}\n\nexport {\n  StatusHeatmapCtrl, StatusHeatmapCtrl as PanelCtrl\n};\n"],"file":"module.js"}